name: Release

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: self-hosted

    steps:
      # Checkout repository
      - name: Checkout Repo
        uses: actions/checkout@v3

      # Get the latest release
      - name: Get Latest Release
        id: get_latest_release
        run: |
          # Fetch the latest release from the GitHub API
          latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')

          # Default to v1.0.0.0 if no release exists
          if [ -z "$latest_release" ] || [ "$latest_release" = "null" ]; then
            latest_release="v1.0.0.0"
          fi

          echo "Latest release: $latest_release"
          echo "latest_release=$latest_release" >> $GITHUB_ENV

      # Increment the version number
      - name: Increment Version
        id: increment_version
        run: |
          # Remove the 'v' prefix
          latest_release="${latest_release#v}"
          IFS='.' read -r -a version_parts <<< "$latest_release"

          major="${version_parts[0]}"
          minor="${version_parts[1]}"
          patch="${version_parts[2]}"
          build="${version_parts[3]}"

          # Increment the build number
          build=$((build + 1))

          # Handle patch roll-over at 100
          if [ "$build" -eq 100 ]; then
            build=0
            patch=$((patch + 1))
          fi

          # Handle minor roll-over at 100
          if [ "$patch" -eq 100 ]; then
            patch=0
            minor=$((minor + 1))
          fi

          # Handle major roll-over at 100
          if [ "$minor" -eq 100 ]; then
            minor=0
            major=$((major + 1))
          fi

          # Construct the new version
          new_version="v$major.$minor.$patch.$build"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      # Create a new release
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.new_version }}
          release_name: Release ${{ env.new_version }}
          body: "Automated release for ${{ env.new_version }}"
          draft: false
          prerelease: false
