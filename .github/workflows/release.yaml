name: Release

on:
  push:
    branches:
      - main

jobs:
    create-release:
        runs-on: self-hosted
        steps:
            - name: Checkout Repo
              uses: actions/checkout@v3

            - name: Get Latest Release
              id: get_latest_release
              run: |
                # Fetch the latest release from the GitHub API
                latest_release=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r '.tag_name')

                #Default to v1.0.0.0 if no releases exists
                if [ -z "$latest_release" ] || [ -z "$latest_release"]; then
                  latest_release="v1.0.0.0"
                fi

                echo "Latest release: $latest_release"
                echo "latest_release=$latest_release" >> $GITHUB_ENV

            - name: Increment version
              id: increment_version
              run: |
                # Increment the version number
                latest_release="${latest_release#v}
                IFS='.' read -r -a version_parts <<< "$latest_release"

                major="${version_parts[0]}"
                minor="${version_parts[1]}"
                patch="${version_parts[2]}"
                build="${version_parts[3]}"

                build=$((build + 1))

                if [ $build -eq 100 ]; then
                  build=0
                  patch=$((patch + 1))
                fi

                if [ $patch -eq 100 ]; then
                  patch=0
                  minor=$((minor + 1))
                fi

                if [ $minor -eq 100 ]; then
                  minor=0
                  major=$((major + 1))
                fi

                new_version="v$major.$minor.$patch.$build"
                echo "New version: $new_version"
                echo "new_version=$new_version" >> $GITHUB_ENV

            - name: Create Release
              uses: actions/create-release@v1
              env:
                GIT_SSH_PRIVATE_KEY: ${{ secrets.GIT_SSH_PRIVATE_KEY }}
              with:
                tag_name: ${{ env.new_version}}
                release_name: Release ${{ env.new_version}}
                body: "Automated release for ${{ env.new_version}}"
                draft: false
                prerelease: false
