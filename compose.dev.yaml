name: area51-dev
services:
  server:
    build:
      context: .devcontainer/backend
      dockerfile: Dockerfile
    volumes:
      - .:/workspace:cached
        #  SSH keys
      - "${HOME}/.ssh:/home/vscode/.ssh:cached"
      #  ZSH with Zinit and Powerlevel10k
      - "${HOME}/.zshrc:/home/vscode/.zshrc:cached"
      - "${HOME}/.zsh_history:/home/vscode/.zsh_history:cached"
      - "${HOME}/.oh-my-zsh:/home/vscode/.oh-my-zsh:cached"
      - "${HOME}/.p10k.zsh:/home/vscode/.p10k.zsh:cached"
    env_file:
      - .env
    command: sleep infinity
    ports:
      - "0.0.0.0:8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - app-networks-dev

  frontend:
    image: mcr.microsoft.com/devcontainers/typescript-node:1-22-bookworm
    volumes:
      - .:/workspace:cached
      #  SSH keys
      - "${HOME}/.ssh:/home/node/.ssh:cached"
      #  ZSH with Zinit and Powerlevel10k
      - "${HOME}/.zshrc:/home/node/.zshrc:cached"
      - "${HOME}/.zsh_history:/home/node/.zsh_history:cached"
      - "${HOME}/.oh-my-zsh:/home/node/.oh-my-zsh:cached"
      - "${HOME}/.p10k.zsh:/home/node/.p10k.zsh:cached"
    command: sleep infinity
    environment:
      - NODE_ENV=development
      - PORT=8081
    ports:
      - "0.0.0.0:8081:8081"
    networks:
      - app-networks-dev

  database:
    image: postgres:17
    container_name: area51-db
    environment:
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      DB_HOST: "${DB_HOST}"
    volumes:
      - database-data-dev:/var/lib/postgresql/data
    networks:
      - app-networks-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    build:
      context: ./pgadmin
    container_name: pgadmin
    ports:
      - "0.0.0.0:8079:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
      PGADMIN_CONFIG_SERVER_MODE: "${PGADMIN_DEFAULT_CONFIG_SERVER_MODE}"
      PGADMIN_CONFIG_ENHANCED_CSFR: "${PGADMIN_DEFAULT_CONFIG_ENHANCED_CSFR}"
    networks:
      - app-networks-dev
    depends_on:
      database:
        condition: service_healthy

volumes:
  database-data-dev:

networks:
  app-networks-dev: